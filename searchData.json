[{"title":"grid布局","url":"/2020/05/22/grid布局/","content":"一、概述\n_______________________________________________________________________________________________________________________\n网格布局（Grid）是最强大的 CSS 布局方案。\n\n它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。\n![grid布局界面](/images/grid1.png)\n上图这样的布局，就是 Grid 布局的拿手好戏。\n\nGrid 布局与 Flex 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。\n\nFlex 布局是轴线布局，只能指定\"项目\"针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成\"行\"和\"列\"，产生单元格，然后指定\"项目所在\"的单元格，可以看作是二维布局。Grid 布局远比 Flex 布局强大。\n\n二、基本概念\n_______________________________________________________________________________________________________________________\n学习 Grid 布局之前，需要了解一些基本概念。\n\n2.1 容器和项目\n\n采用网格布局的区域，称为\"容器\"（container）。容器内部采用网格定位的子元素，称为\"项目\"（item）。\n![alt](/images/grid2.png)\n\n上面代码中，最外层的div元素就是容器，内层的三个div元素就是项目。\n\n注意：项目只能是容器的顶层子元素，不包含项目的子元素，比如上面代码的p元素就不是项目。Grid 布局只对项目生效。\n\n2.2 行和列\n\n容器里面的水平区域称为\"行\"（row），垂直区域称为\"列\"（column）。\n![alt](/images/grid3.png)\n上图中，水平的深色区域就是\"行\"，垂直的深色区域就是\"列\"。\n2.3 单元格\n\n行和列的交叉区域，称为\"单元格\"（cell）。\n\n正常情况下，n行和m列会产生n x m个单元格。比如，3行3列会产生9个单元格。\n2.4 网格线\n\n划分网格的线，称为\"网格线\"（grid line）。水平网格线划分出行，垂直网格线划分出列。\n\n正常情况下，n行有n + 1根水平网格线，m列有m + 1根垂直网格线，比如三行就有四根水平网格线。\n![alt](/images/grid4.png)\n上图是一个 4 x 4 的网格，共有5根水平网格线和5根垂直网格线。\n\n三、容器属性\n_______________________________________________________________________________________________________________________\nGrid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。这部分先介绍容器属性。\n\n3.1 display 属性\ndisplay: grid指定一个容器采用网格布局。\n![alt](/images/grid5.png)\n![alt](/images/grid6.png)\n上图是display: grid的<a href=\"https://jsbin.com/guvivum/edit?html,css,output\">效果</a>"},{"title":"PowerShell因为在此系统中禁止执行脚本问题的解决方法","url":"/2020/05/22/PowerShell因为在此系统中禁止执行脚本问题的解决方法/","content":"首次在计算机上启动 Windows PowerShell 时，现用执行策略很可能是 Restricted（默认设置）。\n\nRestricted 执行策略是不允许任何脚本运行。\n\nAllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。\n\n那么如何运行所选未签名脚本（即使在执行策略为 RemoteSigned 的情况下），如何对脚本进行签名以便您自己使用。\n\n有关 Windows PowerShell 执行策略的详细信息，请输入: about_Execution_Policy\n若要了解计算机上的现用执行策略，在PowerShell中输入：get-executionpolicy\n若要在本地计算机上运行您编写的未签名脚本和来自其他用户的签名脚本，请使用以下命令将计算机上的 执行策略更改为 RemoteSigned：set-executionpolicy remotesigne\n所以只要运行上述命令就可以了。\n有关详细信息，请输入Set-ExecutionPolicy\n"},{"title":"first","url":"/2020/05/22/first/","content":"title: this is my first blog\n"},{"title":"Hello World","url":"/2020/05/22/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]